datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum DeliveryStatus {
  PENDING
  IN_PROGRESS
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

model Category {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String    @unique
  description    String?   @map("desc")
  commonImageUrl String?   @map("common_image_url")
  product        Product[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Product {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  material     String
  image_url    String?
  supply_price Float
  category     Category  @relation(fields: [categoryId], references: [id])
  categoryId   String    @db.ObjectId
  supplier     Supplier  @relation(fields: [supplierId], references: [id])
  supplierId   String    @db.ObjectId
  sellable     Sellable?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Supplier {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  company_name String
  address      String
  email        String?
  telephone    String
  category     String
  product      Product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([email])
}

model Sellable {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  product    Product  @relation(fields: [productId], references: [id])
  productId  String   @unique @db.ObjectId
  sell_price Float
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId
  orders     Orders?
}

model Customer {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  nic       String     @unique
  firstName String     @map("first_name")
  lastName  String     @map("last_name")
  address   String
  telephone String
  email     String?
  password  String
  sellables Sellable[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([email, nic])
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  provider  String
  email     String
  role      String?
  createdAt DateTime @default(now())

  @@index([email])
}

model Employee {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  nic      String
  fname    String
  lname    String
  email    String
  position String
  admin    Admin?
}

model Admin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  employeeId String   @unique @db.ObjectId
  employee   Employee @relation(fields: [employeeId], references: [id])
  username   String
  password   String
  email      String
  role       String
}

model Delivery {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  deliveryAddress  String         @map("delivery_address")
  deliveryCity     String         @map("delivery_city")
  deliveryProvince String         @map("delivery_province")
  district         String
  phoneNumber      String         @map("phone_number")
  requestedTime    DateTime       @map("requested_time")
  deliveredTime    DateTime?      @map("delivered_time")
  status           DeliveryStatus @default(PENDING)
  distance         Float
  deliveryBoyId    String         @db.ObjectId
  order            Orders?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Orders {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  recipe     String?
  delivery   Delivery?     @relation(fields: [deliveryId], references: [id])
  deliveryId String?       @unique @db.ObjectId
  payment    Payment?      @relation(fields: [paymentId], references: [id])
  paymentId  String?       @db.ObjectId
  sellable   Sellable      @relation(fields: [sellableId], references: [id])
  sellableId String        @unique @db.ObjectId
  status     PaymentStatus @default(PENDING)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model Payment {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  amount         Float
  payment_date   DateTime
  payment_status String
  orders         Orders[]
}
